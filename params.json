{
  "name": "Parseit",
  "tagline": "A fixed record lenght text file parser",
  "body": "Parseit\r\n=======\r\n\r\n* [Página del proyecto](https://pmoracho.github.io/parseit)\r\n* [Proyecto en github](https://github.com/pmoracho/parseit)\r\n* [Descarga de ejecutable para windows](https://github.com/pmoracho/parseit/raw/master/dist/parseit-20161102.zip)\r\n\r\n\r\n`Parseit` es una herramienta de linea de comandos para \"interpretar\" archivos\r\nde texto con formato (Con o sin delimitador). \r\n\r\nPara entender que es `parseit` nada mejor que un ejemplo práctico:\r\n\r\nPara el intercambio de información con el **Afip** (Agencia federal de ingresos\r\npúblicos), se suele trabajar con este tipo de archivos. En particular los\r\ncontribuyentes grandes, que suelen generar gran cantidad de información, y a\r\nlos que les resulta más óptimo trabajar mediante la importación de archivos\r\ndirectamente en los aplicativos del mencionado organismo. Veamos un caso típico\r\nde una aplicación, la del Sistema federal de información más conocido como\r\n**SIFERE** que permite importar masivamente la información de retenciones y\r\npercepciones. El archivo de importación (texto, con campos de longitud fija y\r\ncaracteres de fin de linea) tiene un formato ya definido como el siguiente:\r\n\r\n```\r\n90130-00000000-901/01/200612341234567891234560FA0000000000010000123500000125,20\r\n90130-00000000-901/01/200612341234567891234560FA0000000000010000123500000125,20\r\n90130-00000000-901/01/200612341234567891234560FA0000000000010000123500000125,20\r\n``` \r\n\r\nLeer un archivo así tiene sus complicaciones, si bien los datos están en texto\r\nclaro resulta complicado analizarlo, y aquí es dónde entra **Parseit**.  Para\r\npoder interpretar este archivo de una forma más conveniente, y usando la\r\ndocumentación que oportunamente publica el Afip, podemos definir dicho formato\r\nen una archivo JSON, por ejemplo de la siguiente forma:\r\n\r\n```\r\n\t\t\"sifere-retenciones\": {\r\n\t\t\t\"category\": \"Afip.Sifere\",\r\n\t\t\t\"delimiter\": \"\",\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"Código de Jurisdicción\":         [ 3, \"table\", \"sifere-jurisdicciones\", \"\"],\r\n\t\t\t\t\"CUIT del Agente de Retención\":   [13, \"string\", \"\", \"\"],\r\n\t\t\t\t\"Fecha de la Retención\":          [10, \"date\", \"%d/%m/%Y\", \"%d-%m-%Y\"],\r\n\t\t\t\t\"Número de Sucursal\":             [ 4, \"string\", \"\", \"\"],\r\n\t\t\t\t\"Número de constancia\":           [16, \"string\", \"\", \"\"],\r\n\t\t\t\t\"Tipo de Comprobante\":            [ 1, \"table\", \"sifere-tipo-comprobantes\", \"\"],\r\n\t\t\t\t\"Letra del Comprobante\":          [ 1, \"string\", \"\", \"\"],\r\n\t\t\t\t\"Número de Comprobante Original\": [20, \"string\", \"\", \"\"],\r\n\t\t\t\t\"Importe Retenido\":               [11, \"amount\", \"\", \"\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n``` \r\n\r\nNótese que además de definir la longitud de cada campo y el orden, definimos el\r\ntipo de datos y particularmente algunos de los campos son \"tablas\", dónde el\r\ndato en sí hace referencia a una tabla de valores ya definida también en el\r\narchivo, por ejemplo algo así:\r\n\r\n```\r\n\t\"sifere-jurisdicciones\": {\r\n\t\t\"901\": \"Capital Federal\",\r\n\t\t\"902\": \"Buenos Aires\",\r\n\t\t\"903\": \"Catamarca\",\r\n\t\t\"904\": \"Córdoba\",\r\n\t\t\"905\": \"Corrientes\",\r\n\t\t\"906\": \"Chaco\",\r\n\t\t\"907\": \"Chubut\",\r\n\t\t\"908\": \"Entre Ríos\",\r\n\t\t\"909\": \"Formosa\",\r\n\t\t\"910\": \"Jujuy\",\r\n\t\t\"911\": \"La Pampa\",\r\n\t\t\"912\": \"La Rioja\",\r\n\t\t\"913\": \"Mendoza\",\r\n\t\t\"914\": \"Misiones\",\r\n\t\t\"915\": \"Neuquén\",\r\n\t\t\"916\": \"Río Negro\",\r\n\t\t\"917\": \"Salta\",\r\n\t\t\"918\": \"San Juan\",\r\n\t\t\"919\": \"San Luis\",\r\n\t\t\"920\": \"Santa Cruz\",\r\n\t\t\"921\": \"Santa Fe\",\r\n\t\t\"922\": \"Santiago del Estero\",\r\n\t\t\"923\": \"Tierra del Fuego\",\r\n\t\t\"924\": \"Tucumán\"\r\n\t},\r\n\t\"sifere-tipo-comprobantes\": {\r\n\t\t\"F\": \"Factura\",\r\n\t\t\"R\": \"Recibo\", \r\n\t\t\"D\": \"Nota de Débito\",\r\n\t\t\"C\": \"Nota de Crédito\",\r\n\t\t\"O\": \"Otro\"\r\n\t},\r\n```\r\n\r\nDe esta forma tenemos:\r\n* Un archivo de texto con información en campos de longitud fija, por ejemplo:\r\n  `sifere.dat`\r\n* Una definición JSON del formato, en un archivo de nombre `parseit.fmt` (puede\r\n  ser cualquier nombre, pero esto se lee automáticamente)\r\n* La herramienta `parseit` o `parseit.exe`\r\n\r\nCon esta configuración al invocar `parseit sifere.dat` o eventualmente `python\r\nparseit sifere.dat` obtendremos en la línea de comandos una salida como está:\r\n\r\n```\r\n+----------+--------------------------+--------------------------------+-------------------------+----------------------+------------------------+-----------------------+-------------------------+----------------------------------+--------------------+\r\n|   # Reg. | Código de Jurisdicción   | CUIT del Agente de Retención   | Fecha de la Retención   |   Número de Sucursal |   Número de constancia | Tipo de Comprobante   | Letra del Comprobante   |   Número de Comprobante Original |   Importe Retenido |\r\n|----------+--------------------------+--------------------------------+-------------------------+----------------------+------------------------+-----------------------+-------------------------+----------------------------------+--------------------|\r\n|        1 | 901 - Capital Federal    | 30-00000000-9                  | 01-01-2006              |                 1234 |       1234567891234560 | F - Factura           | A                       |             00000000000100001235 |             125.20 |\r\n|        2 | 901 - Capital Federal    | 30-00000000-9                  | 01-01-2006              |                 1234 |       1234567891234560 | F - Factura           | A                       |             00000000000100001235 |             125.20 |\r\n|        3 | 901 - Capital Federal    | 30-00000000-9                  | 01-01-2006              |                 1234 |       1234567891234560 | F - Factura           | A                       |             00000000000100001235 |             125.20 |\r\n+----------+--------------------------+--------------------------------+-------------------------+----------------------+------------------------+-----------------------+-------------------------+----------------------------------+--------------------+\r\n\r\n```\r\n\r\nQue hizo `parseit`?\r\n* Identificó y relacionó automáticamente al archivo de entrada con el formato\r\n  definido anteriormente\r\n* Extrajo los campos del archivo original y los separo y formateo\r\n  convenientemente\r\n* Agregó un titulo a cada columna según lo definido en el archivo de\r\n  configuración JSON\r\n* Completó la información en los campos tipo \"tabla\" de la forma código -\r\n  valor para mejorar la legibilidad\r\n* Formateo también los campos fecha para mejorar la lectura\r\n* Agregó una útil columna `# Reg`\r\n\r\n\r\n# Algunos puntos claves de este proyecto:\r\n\r\n* Herramienta de línea de comandos\r\n* Interpretación de archivos de texto de formato especifico, con caractér de\r\n  fin de línea. \r\n* Interpretación de archivos CSV (valores separados por delimitadores). \r\n* Uso de archivos JSON para la definición del formato (consultar parseit.json)\r\n\t* Definición de campos, longitudes y formatos varios\r\n\t* Definición de valores tipo tabla (código: valor) para reemplazo al\r\n\t  mostrar de los mismos\r\n* Especificación de un formato determinado o por defecto el archivo\r\n  \"parseit.fmt\" que estuviera en la misma carpeta de ejecutable\r\n* Varios formatos de exportación de los datos, entre otros:\r\n\t* psql \r\n\t* csv\r\n\t* html\r\n\t* etc.\r\n* Definir que filas y que columnas mostrar\r\n* Útil visualización o \"transposición\" de la tabla al modo \"horizontal\"\r\n* Poder incorporar un hoja de estilos cuando los datos los exportamos a html\r\n* Poder exportar a un archivo determinado y apertura automática del mismo. \r\n* Con la distribución se agregan los formatos para interpretar los archivos de\r\n  texto para el Siap / Afip:\r\n\t* **ARCIBA**: débitos y créditos\r\n\t* **RG3685**: Compras: comprobantes y alícuotas, Ventas: comprobantes y\r\n\t  alicuotas\r\n\t* **SIFERE**: Retenciones y percepciones\r\n\t* **SICORE**: Retenciones y percepciones\r\n\t* **IIBB**: Padrones de alto riesgo y régimen general\r\n\r\n\r\n# Requerimientos e instalación:\r\n\r\nEn Windows, nada en particular ya que se distribuye la herramienta \"congelada\"\r\nmediante **Pyinstaller**. Descargarla y copiarla en alguna carpeta del sistema,\r\nidealmente que esté apuntada al path.\r\n\r\n* Para descargar y descomprimir **Parseit**, hacer click\r\n  [aqui](https://github.com/pmoracho/parseit/blob/master/dist/parseit-20161011.zip)\r\n* El proyecto en [**Github**](https://github.com/pmoracho/parseit)\r\n\r\n\r\n# Ejemplos de Uso:\r\n\r\n## Invocación sin parámetros o con `--help\r\n\r\n```\r\n\r\nuso: parseit [-h] [-v] [-f \"path o archivo\"] [-u \"formato\"] [-t] [-s] [-i]\r\n             [-o \"archivo\"] [-x] [-e \"formato\"] [-c \"columnas\"] [-r \"filas\"]\r\n             [-n] [-z] [-a] [-l \"archivo css\"]\r\n             [\"archivo a interpretar\"]\r\n\r\nParseador de archivos\r\n2016, Patricio Moracho <pmoracho@gmail.com>\r\n\r\nargumentos posicionales:\r\n  \"archivo a interpretar\"          Archivo de input\r\n\r\nargumentos opcionales:\r\n  -h, --help                       mostrar esta ayuda y salir\r\n  -v, --version                    show program's version number and exit\r\n  -f \"path o archivo\", --format \"path o archivo\"\r\n                                   Definir path o archivo FMT a utilizar\r\n  -u \"formato\", --useformat \"formato\"\r\n                                   Forzar el uso de un determinado formato para porcesar el archivo\r\n  -t, --dontusetables              No usar traducción por tablas y mostrar los datos nativos\r\n  -s, --showformat                 Mostrar información de un formato (--format) en particular o todos los definidos\r\n  -i, --ignorefmterror             Ignorar errores al cargar archivos de formatos\r\n  -o \"archivo\", --outputfile \"archivo\"\r\n                                   Exportar a un archivo\r\n  -x, --openfile                   abrir automáticamente el archivo\r\n  -e \"formato\", --exportformat \"formato\"\r\n                                   Exportar en un formato específico\r\n  -c \"columnas\", --showcols \"columnas\"\r\n                                   Números de las columnas a mostrar\r\n  -r \"filas\", --showrows \"filas\"   Números de las filas a mostrar\r\n  -n, --dontshowrecordnumber       No mostrar los números de cada registro\r\n  -z, --horizontalmode             Modo de visualización horizontal\r\n  -a, --addtotals                  Agregar una última fila con los totales de los campos númericos\r\n  -l \"archivo css\", --css-file \"archivo css\"\r\n                                   Archivo de estilos (.Css) para la salida Html\r\n\r\nEjemplos de uso:\r\n\r\n- Interpretar un archivo infiriendo el formato:\r\n  parseit [opciones] <archivo a interpretar>\r\n\r\n- Mostrar todos los formatos disponibles y sus definiciones:\r\n  parseit [opciones] -s [opciones]\r\n\r\n- Mostrar esta ayuda:\r\n  parseit -h  \r\n```\r\n\r\n## `parseit sample/padron.txt -r 4-9,12 -c 1-10,13`\r\n\r\nFiltra los registros 4 al 9 y el 12, y muestra las columnas 1 a 10 y la 13 \r\n\r\n```\r\n+----------+---------------+---------------+---------------+-------------+--------------+--------------+------------------+--------------+-------------+-----------------------------------+\r\n|   # Reg. | Fecha Publ.   | Fecha Desde   | Fecha Hasta   |        CUIT | Tipo         | Marca Alta   | Marca Alícuota   |   Percepción |   Retención | Razón Social                      |\r\n|----------+---------------+---------------+---------------+-------------+--------------+--------------+------------------+--------------+-------------+-----------------------------------|\r\n|        4 | 27-06-2016    | 01-11-2016    | 30-11-2016    | 20044290775 | D - Directo  | S            | N                |         1.50 |        1.50 | LADEDA HORACIO JOSE               |\r\n|        5 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004226039 | C - Convenio | S            | N                |         6.00 |        4.50 | MIGUENS JOSE ENRIQUE C            |\r\n|        6 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004228635 | D - Directo  | S            | N                |         6.00 |        4.50 | LATUGAYE JOSE JORGE               |\r\n|        7 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004234597 | D - Directo  | S            | N                |         6.00 |        4.50 | PREPELITCHI PEDRO                 |\r\n|        8 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004234813 | D - Directo  | S            | N                |         6.00 |        4.50 | SUCESION DE SPOTA ALBERTO ANTONIO |\r\n|        9 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004237375 | D - Directo  | S            | N                |         6.00 |        4.50 | ZAMORA JOSE MAXIMO                |\r\n|       12 | 23-09-2016    | 01-10-2016    | 31-12-2016    | 20004246846 | D - Directo  | S            | N                |         6.00 |        4.50 | ROMANELLA EDUARDO EDGAR           |\r\n+----------+---------------+---------------+---------------+-------------+--------------+--------------+------------------+--------------+-------------+-----------------------------------+\r\n\r\n```\r\n\r\n## `parseit sample/padron.txt -r 4,11 -z`\r\n\r\nMuestra solo los registros 4 y 11 y los muestra en le modo horizontal.\r\n\r\n```\r\n+---------------------+---------------------+\r\n|               Campo | Valor               |\r\n|---------------------+---------------------|\r\n|              # Reg. | 4                   |\r\n|         Fecha Publ. | 27-06-2016          |\r\n|         Fecha Desde | 01-11-2016          |\r\n|         Fecha Hasta | 30-11-2016          |\r\n|                CUIT | 20044290775         |\r\n|                Tipo | D - Directo         |\r\n|          Marca Alta | S                   |\r\n|      Marca Alícuota | N                   |\r\n|          Percepción | 1.5                 |\r\n|           Retención | 1.5                 |\r\n|       Grupo Percep. | 16                  |\r\n|    Grupo Retención. | 16                  |\r\n|        Razón Social | LADEDA HORACIO JOSE |\r\n| ------------------- | ------------------- |\r\n|              # Reg. | 11                  |\r\n|         Fecha Publ. | 23-09-2016          |\r\n|         Fecha Desde | 01-10-2016          |\r\n|         Fecha Hasta | 31-12-2016          |\r\n|                CUIT | 20004242042         |\r\n|                Tipo | D - Directo         |\r\n|          Marca Alta | S                   |\r\n|      Marca Alícuota | N                   |\r\n|          Percepción | 6.0                 |\r\n|           Retención | 4.5                 |\r\n|       Grupo Percep. | 00                  |\r\n|    Grupo Retención. | 00                  |\r\n|        Razón Social | PEQA JUAN CARLOS    |\r\n| ------------------- | ------------------- |\r\n+---------------------+---------------------+\r\n```\r\n\r\n## `parseit sample/padron.txt -r 4,11 -e csv`\r\n\r\nMuestra solo los registros 4 y 11 y los exporta en la forma tradicional CSV, por ejemplo para importar a un Excel.\r\n\r\n```\r\n\"# Reg.\";\"Fecha Publ.\";\"Fecha Desde\";\"Fecha Hasta\";\"CUIT\";\"Tipo\";\"Marca Alta\";\"Marca Alícuota\";\"Percepción\";\"Retención\";\"Grupo Percep.\";\"Grupo Retención.\";\"Razón Social\"\r\n\"4\";\"27-06-2016\";\"01-11-2016\";\"30-11-2016\";\"20044290775\";\"D - Directo\";\"S\";\"N\";\"    1.50\";\"    1.50\";\"16\";\"16\";\"LADEDA HORACIO JOSE\"\r\n\"11\";\"23-09-2016\";\"01-10-2016\";\"31-12-2016\";\"20004242042\";\"D - Directo\";\"S\";\"N\";\"    6.00\";\"    4.50\";\"00\";\"00\";\"PEQA JUAN CARLOS\"\r\n```\r\n\r\n## `parseit sample/padron.txt -r 4,11 -e html`\r\n\r\nGenerar una salida html de los registros 4 y 11\r\n\r\n```html\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<meta name=\"description\" content=\"parseit - Parseador de archivos\">\r\n<meta name=\"author\" content=\"2016, Patricio Moracho <pmoracho@gmail.com>\">\r\n<style type=\"text/css\">\r\n\r\n                        table.tabulate {\r\n                                font-family: Verdana, Geneva, sans-serif;\r\n                                font-size:10px;\r\n                                color:#000000;\r\n                                border-width: 1px;\r\n                                border-color: #eeeeee;\r\n                                border-collapse: collapse;\r\n                                background-color: #ffffff;\r\n                                width: 100%;\r\n                                table-layout: auto;\r\n                        }\r\n                        table.tabulate th {\r\n                                border-width: 1px;\r\n                                padding: 1px;\r\n                                border-style: solid;\r\n                                border-color: #eeeeee;\r\n                                background-color: #004f6f;\r\n                                color:#fff;\r\n                                text-align: left;\r\n                        }\r\n                        table.tabulate td {\r\n                                border-width   : 1px;\r\n                                padding            : 1px;\r\n                                border-style   : solid;\r\n                                border-color   : #eeeeee;\r\n                                vertical-align : top;\r\n                        }\r\n                        table.tabulate tr:nth-of-type(even) {\r\n                                background-color:#D2E4FC;\r\n                        }\r\n                        table.tabulate tr:nth-of-type(odd) {\r\n                                background-color:#F7FDFA;\r\n                        }\r\n                        p {\r\n                                font-family: Verdana, Geneva, sans-serif;\r\n                                font-size:14px;\r\n                                width: 100%;\r\n                                padding: 0px;\r\n                                margin: 0px;\r\n                                text-align: center;\r\n                        }\r\n\r\n</style>\r\n<title>Archivo: sample/padron.txt (Padron-iibb-general)</title>\r\n</head>\r\n<body>\r\n<p><b>Archivo: sample/padron.txt (Padron-iibb-general)</b></p><p>Cantidad de registros visualizados: 2</p><p></br></p><table class=tabulate>\r\n<thead>\r\n<tr><th style=\"text-align: right;\"># Reg.</th><th>Fecha Publ.</th><th>Fecha Desde</th><th>Fecha Hasta</th><th style=\"text-align: right;\">CUIT</th><th>Tipo</th><th>Marca Alta</th><th>Marca Al&iacute;cuota</th><th style=\"text-align: right;\">Percepci&oacute;n</th><th style=\"text-align: right;\">Retenci&oacute;n</th><th style=\"text-align: right;\">Grupo Percep.</th><th style=\"text-align: right;\">Grupo Retenci&oacute;n.</th><th>Raz&oacute;n Social</th></tr>\r\n</thead>\r\n<tbody>\r\n<tr><td style=\"text-align: right;\">4</td><td>27-06-2016</td><td>01-11-2016</td><td>30-11-2016</td><td style=\"text-align: right;\">20044290775</td><td>D - Directo</td><td>S</td><td>N</td><td style=\"text-align: right;\">1.50</td><td style=\"text-align: right;\">1.50</td><td style=\"text-align: right;\">16</td><td style=\"text-align: right;\">16</td><td>LADEDA HORACIO JOSE</td></tr>\r\n<tr><td style=\"text-align: right;\">11</td><td>23-09-2016</td><td>01-10-2016</td><td>31-12-2016</td><td style=\"text-align: right;\">20004242042</td><td>D - Directo</td><td>S</td><td>N</td><td style=\"text-align: right;\">6.00</td><td style=\"text-align: right;\">4.50</td><td style=\"text-align: right;\">00</td><td style=\"text-align: right;\">00</td><td>PEQA JUAN CARLOS</td></tr>\r\n</tbody>\r\n</table></body>\r\n</html>\r\n```\r\n\r\n## `parseit sample/padron.txt  -e html -o salida.html -x`\r\n\r\nExportar a html directo al archivo `salida.html` y abrirlo automáticamente con el navegador asociado\r\n\r\n![Captura de pantalla de un Chrome](https://github.com/pmoracho/parseit/raw/master/doc/images/export-html.png)\r\n\r\n\r\n# Notas para el desarrollador:\r\n\r\n## Requisitos iniciales\r\n\r\nEl proyecto **parseit** esta construido usando el lenguaje **python**, a la\r\nfecha no se usan librerías adicionales a las propias de python, pero de todas\r\nformas es recomendable preparar antes que nada, un entorno de desarrollo. A\r\ncontinuación expondremos en detalle cuales son los pasos para tener preparado\r\nel entorno de desarrollo. Este detalle esta orientado a la implementación sobre\r\nWindows 32 bits, los pasos para versiones de 64 bits son sustancialmente\r\ndistintos, en particular por algunos de los \"paquetes\" que se construyen a\r\npartir de módulos en C o C++, de igual forma la instalación sobre Linux tiene\r\nsus grandes diferencias. Eventualmente profundizaremos sobre estos entornos,\r\npero en principio volvemos a señalar que el siguiente detalle aplica a los\r\nambientes Windows de 32 bits:\r\n\r\n* Obviamente en primer lugar necesitaremos\r\n  [Python](https://www.python.org/ftp/python/3.4.0/python-3.4.0.msi), por ahora\r\n  únicamente la versión 3.4. La correcta instalación se debe verificar desde la\r\n  línea de comandos: `python --version`. Si todo se instaló correctamente se\r\n  debe ver algo como esto `Python 3.4.0`, sino verificar que Python.exe se\r\n  encuentre correctamente apuntado en el PATH.\r\n\r\n* Es conveniente pero no mandatorio hacer upgrade de la herramienta pip:\r\n  `python -m pip install --upgrade pip`\r\n\r\n* [Virutalenv](https://virtualenv.pypa.io/en/stable/). Es la herramienta\r\n  estándar para crear entornos \"aislados\" de python. Para no tener conflictos\r\n  de desarrollo lo que haremos mediante esta herramienta es crear un \"entorno\r\n  virtual\" de python en una carpeta del proyecto (venv). Este \"entorno virtual\"\r\n  contendrá una copia completa de Python, al activarlo se modifica el PATH al\r\n  python.exe que apuntará ahora a nuestra carpeta del entorno, evitando\r\n  cualquier tipo de conflicto con un entorno Python ya existente. La\r\n  instalación de virtualenv se hara mediante `pip install virtualenv`\r\n\r\n* Descargar el proyecto desde [Github](https://github.com/pmoracho/parseit), se\r\n  puede descargar desde la página el proyecto como un archivo Zip, o si\r\n  contamos con [Git](https://git-for-windows.github.io/) sencillamente haremos\r\n  un `git clone https://github.com/pmoracho/parseit`.\r\n\r\n* El proyecto una vez descomprimido o luego del clonado del repositorio tendrá\r\n  una estructura de directorios similar a la siguiente:\r\n\r\n```\r\nparseit.git\r\n   |-dist\r\n   |-tests\r\n   |-tools\r\n```\r\n\r\n## Preparación del entorno virtual local\r\n\r\nPara poder ejecutar, o crear la distribución de la herramientas, lo primero que\r\ndeberemos hacer es armar un entorno python \"virtual\" que alojaremos en una\r\nsubcarpeta del directorio principal que llamaremos \"venv\". En el proyecto\r\nincorporamos una herramienta de automatización de algunas tareas básicas. Se\r\ntrata de `make.py`, la forma de ejecutarlo es la siguiente: `python\r\ntools\\make.py <comando>` la ejecución si parámetros o mediante el parámetro\r\n`--help` arrojará una salida como lo que sigue:\r\n\r\n```\r\nAutomatización de tareas para el proyecto Paresit\r\n(c) 2016, Patricio Moracho <pmoracho@gmail.com>\r\n\r\nUso: make <command> [<args>]\r\n\r\nLos comandos más usados:\r\n   devcheck   Hace una verificación del entorno de desarrollo\r\n   devinstall Realiza la instalación del entorno de desarrollo virtual e instala los requerimientos\r\n   docinstall Intalación de Sphinx\r\n   clear      Elimina archivos innecesarios\r\n   test       Ejecuta todos los tests definidos del proyecto\r\n   build      Construye la distribución binaria de las herramientas del proyecto\r\n\r\nargumentos posicionales:\r\n  command     Comando a ejecutar\r\n\r\nargumentos opcionales:\r\n  -h, --help  mostrar esta ayuda y salir\r\n```\r\n\r\nPara preparar el entorno virtual simplemente haremos `python tools\\make.py\r\ndevinstall`, este proceso si resulta exitoso deberá haber realizado las\r\nsiguientes tareas:\r\n\r\n* Creación de un entorno pyhton virtual en la carpeta \"venv\", invocable\r\n  mediante `venv\\Scripts\\activate.bat` en Windows o `source\r\n  venv/Scripts/activate` en entornos Linux o Cygwin/Mingw (en Windows)\r\n* Instalado todas las dependencias necesarias\r\n\r\n\r\n## Notas adicionales:\r\n\r\n* Es recomendable y cómodo, pero entiendo que no es mandatorio, contar con un\r\n  entorno estilo \"Linux\", por ejemplo [MinGW](http://www.mingw.org/), tal como\r\n  dice la página del proyecto: \"MinGW provides a complete Open Source\r\n  programming tool set which is suitable for the development of native\r\n  MS-Windows applications, and which do not depend on any 3rd-party C-Runtime\r\n  DLLs. (It does depend on a number of DLLs provided by Microsoft themselves,\r\n  as components of the operating system; most notable among these is\r\n  MSVCRT.DLL, the Microsoft C runtime library. Additionally, threaded\r\n  applications must ship with a freely distributable thread support DLL,\r\n  provided as part of MinGW itself).\" De este entorno requerimos algunas\r\n  herramientas de desarrollo: Bash para la línea de comandos y Make para la\r\n  automatización de varias tareas del proyecto. \r\n\r\n* Usar \"soft tabs\": Con cualquier editor que usemos configurar el uso del <tab>\r\n  en vez de los espacios, yo prefiero el <tab> puro al espacio, entiendo que es\r\n  válido el otro criterio pero ya los fuentes están con esta configuración, por\r\n  lo que para evitar problemas al compilar los .py recomiendo seguir usando\r\n  este criterio. Asimismo configurar en 4 posiciones estos <tab>.\r\n\r\n\r\n## Formatos\r\n+ Los formatos se definen en uno o más archivos .FMT que no son más que\r\n  archivos [JSON](http://www.json.org/)\r\n+ [JSON Editor Online](http://www.jsoneditoronline.org/) Para validar la\r\n  edición del archivo de formatos\r\n\r\n# Changelog:\r\n\r\n#### Version 1.4 - 2016-11-02\r\n* Corrección de bug, estaba filtrando un registro del total\r\n\r\n#### Version 1.3 - 2016-10-17\r\n* Primera funcionalidad para la busqueda de registros por texto\r\n\r\n#### Version 1.2 - 2016-10-11\r\n* Primera funcionalidad para el manejo de archivos CSV (separado por\r\n  delimitador)\r\n* Notas varias para el desarrollador\r\n\r\n#### Version 1.1\r\n* Primer release oficial de la herramienta\r\n* Se distribuyen varios formatos para interpretar archivos de Afip / Siap\r\n\r\n#### Version 0.1\r\n* Versión inicial\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}